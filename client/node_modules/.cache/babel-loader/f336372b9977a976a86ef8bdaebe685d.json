{"ast":null,"code":"var _jsxFileName = \"/Volumes/GoogleDrive/My Drive/projects/React-Projects/e-commerce-prj/my-app/client/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; //import { createStructuredSelector } from \"reselect\";\n//import CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\n//import CollectionPage from \"../collection/collection.component\";\n\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\"; // import {\n//   selectIsCollectionFetching,\n//   selectIsCollectionsLoaded,\n// } from \"../../redux/shop/shop.selector\";\n//import WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\"; //const CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n//const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  // componentDidMount() {\n  //   const { updateCollections } = this.props;\n  //   const collectionRef = firestore.collection(\"NewCollections\");\n  //   // fetch(\n  //   //   \"https://firestore.googleapis.com/v1/projects/e-commerce-prj-57a14/databases/(default)/documents/collections\"\n  //   // )\n  //   //   .then((response) => response.json())\n  //   //   .then((collections) => console.log(collections));\n  //   collectionRef.get().then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     updateCollections(collectionsMap);\n  //     this.setState({ loading: false });\n  //   });\n  // }\n  componentDidMount() {\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    // const { match, isFetchingCollections,isCollectionsLoaded } = this.props;\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer // render={(props) => (\n        //   <CollectionOverviewWithSpinner\n        //     isLoading={isCollectionsLoaded}\n        //     {...props}\n        //   />\n        // )}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId` // render={(props) => (\n        //   <CollectionPageWithSpinner\n        //     isLoading={!isCollectionsLoaded}\n        //     {...props}\n        //   />\n        // )}\n        ,\n        component: CollectionPageContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const mapStateToProps = createStructuredSelector({\n//   //isFetchingCollections: selectIsCollectionFetching,\n//   isCollectionsLoaded: selectIsCollectionsLoaded,\n// });\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Volumes/GoogleDrive/My Drive/projects/React-Projects/e-commerce-prj/my-app/client/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AAEA;AACA;;AAEA,SAASC,qBAAT,QAAsC,+BAAtC,C,CACA;AACA;AACA;AACA;AAEA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAEA;AACA;;;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACrC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEL,MAAAA;AAAF,QAA4B,KAAKM,KAAvC;AACAN,IAAAA,qBAAqB;AACtB;;AAEDO,EAAAA,MAAM,GAAG;AACR;AACC,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,QAAA,SAAS,EAAER,4BAHb,CAIE;AACA;AACA;AACA;AACA;AACA;;AATF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBADtB,CAEE;AACA;AACA;AACA;AACA;AACA;AAPF;AAQE,QAAA,SAAS,EAAEP;AARb;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AApDoC,C,CAuDvC;AACA;AACA;AACA;;;AAEA,MAAMQ,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,qBAAqB,EAAE,MAAMW,QAAQ,CAACX,qBAAqB,EAAtB;AADG,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n//import { createStructuredSelector } from \"reselect\";\n\n//import CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\n//import CollectionPage from \"../collection/collection.component\";\n\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n// import {\n//   selectIsCollectionFetching,\n//   selectIsCollectionsLoaded,\n// } from \"../../redux/shop/shop.selector\";\n\n//import WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\n\n//const CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n//const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  // componentDidMount() {\n  //   const { updateCollections } = this.props;\n  //   const collectionRef = firestore.collection(\"NewCollections\");\n\n  //   // fetch(\n  //   //   \"https://firestore.googleapis.com/v1/projects/e-commerce-prj-57a14/databases/(default)/documents/collections\"\n  //   // )\n  //   //   .then((response) => response.json())\n  //   //   .then((collections) => console.log(collections));\n\n  //   collectionRef.get().then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     updateCollections(collectionsMap);\n  //     this.setState({ loading: false });\n  //   });\n  // }\n\n  componentDidMount() {\n    const { fetchCollectionsStart } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n   // const { match, isFetchingCollections,isCollectionsLoaded } = this.props;\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n          // render={(props) => (\n          //   <CollectionOverviewWithSpinner\n          //     isLoading={isCollectionsLoaded}\n          //     {...props}\n          //   />\n          // )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          // render={(props) => (\n          //   <CollectionPageWithSpinner\n          //     isLoading={!isCollectionsLoaded}\n          //     {...props}\n          //   />\n          // )}\n          component={CollectionPageContainer}\n        />\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = createStructuredSelector({\n//   //isFetchingCollections: selectIsCollectionFetching,\n//   isCollectionsLoaded: selectIsCollectionsLoaded,\n// });\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}